basePath: /
consumes:
- application/json
definitions:
  GenericError:
    description: GenericError - Generic error return from server
    properties:
      Message:
        type: string
    type: object
    x-go-package: _/usr/local/go/src/golang_mux_swagger/plant-api/handlers
  Plant:
    description: Plant struct represent the plant  details
    properties:
      category:
        type: string
        x-go-name: Category
      description:
        type: string
        x-go-name: Description
      id:
        description: the id for this plant
        format: int64
        minimum: 1
        type: integer
        x-go-name: ID
      name:
        type: string
        x-go-name: Name
      price:
        format: float
        type: number
        x-go-name: Price
    required:
    - id
    type: object
    x-go-package: _/usr/local/go/src/golang_mux_swagger/plant-api/data
  ValidationError:
    description: ValidationError - Collection of validation error return from validator
    properties:
      Messages:
        items:
          type: string
        type: array
    type: object
    x-go-package: _/usr/local/go/src/golang_mux_swagger/plant-api/handlers
info:
  description: Documentation for Plant API
  title: of Plant API
  version: 1.0.0
paths:
  /plant:
    get:
      description: Returns a list of plants
      operationId: listPlants
      responses:
        "200":
          $ref: '#/responses/plantsResponse'
      tags:
      - plants
    post:
      operationId: addPlant
      parameters:
      - description: |-
          Plant data properties from rrequest body
          Note: id field is ignored both add and update operation
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/Plant'
      responses:
        "200":
          $ref: '#/responses/successContent'
        "400":
          $ref: '#/responses/errorResponse'
        "422":
          $ref: '#/responses/errorValidation'
      tags:
      - plants
  /plant/{id}:
    delete:
      description: Returns empty content
      operationId: deletePlant
      parameters:
      - description: Fetch the plant id from request URL path
        format: int64
        in: path
        name: id
        required: true
        type: integer
        x-go-name: ID
      responses:
        "204":
          $ref: '#/responses/noContent'
        "404":
          $ref: '#/responses/errorResponse'
      tags:
      - plants
    get:
      description: Return plant data based on plant id
      operationId: singlePlant
      parameters:
      - description: Fetch the plant id from request URL path
        format: int64
        in: path
        name: id
        required: true
        type: integer
        x-go-name: ID
      responses:
        "200":
          $ref: '#/responses/plantResponse'
        "404":
          $ref: '#/responses/errorResponse'
      tags:
      - plants
    put:
      operationId: updatePlant
      parameters:
      - description: |-
          Plant data properties from rrequest body
          Note: id field is ignored both add and update operation
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/Plant'
      - description: Fetch the plant id from request URL path
        format: int64
        in: path
        name: id
        required: true
        type: integer
        x-go-name: ID
      responses:
        "200":
          $ref: '#/responses/successContent'
        "400":
          $ref: '#/responses/errorResponse'
        "422":
          $ref: '#/responses/errorValidation'
      tags:
      - plants
produces:
- application/json
responses:
  errorResponse:
    description: Generic error return from server
    schema:
      $ref: '#/definitions/GenericError'
  errorValidation:
    description: Validation error return from plant validator
    schema:
      $ref: '#/definitions/ValidationError'
  noContent:
    description: No content return from server
  plantResponse:
    description: Single plant data return in the response
    schema:
      $ref: '#/definitions/Plant'
  plantsResponse:
    description: A list of plants returns in the response
    schema:
      items:
        $ref: '#/definitions/Plant'
      type: array
  successContent:
    description: Request completed successfully
schemes:
- http
swagger: "2.0"
